{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","placeholder","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","limit","url","encodeURI","fetch","response","json","data","newData","map","item","index","id","title","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAsCeA,EA9BK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAClC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BT,GAAc,SAAAU,GAAC,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAKlB,SACI,uBACIH,YAAaA,EACbU,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,qCAAAC,EAAA,6DAAiBC,EAAjB,+BAAyB,GACtCC,EADa,iDACmCC,UAAUJ,GAD7C,kBACgEE,EADhE,sDAEIG,MAAOF,GAFX,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KACFC,EAAUD,EAAKE,KAAI,SAACC,EAAMC,GAAW,IAAD,EACtC,MAAO,CACHC,GAAIF,EAAKE,GACTC,MAAOH,EAAKG,MACZX,IAAG,UAAEQ,EAAKI,cAAP,aAAE,EAAaC,iBAAiBb,QARxB,kBAWZM,GAXY,4CAAH,sDCgBLQ,EAfK,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOX,EAAS,EAATA,IAC1B,OACI,sBAAKe,UAAU,0CAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBACIC,IAAKL,EACLA,MAAOA,EACPM,IAAKjB,MAGb,4BAAIW,QCeDO,EAxBC,SAAC,GAA6B,IAA3BrB,EAA0B,EAA1BA,SAEf,GAFyC,EAAhBE,MCAD,SAACF,GACzB,MAA0Bd,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACN1B,EAAQC,EAAU,IACb0B,MAAM,SAAAlB,GACHgB,EAAS,CACLhB,OACAc,SAAS,SAGtB,CAACtB,IAEGuB,EDdyBI,CAAa3B,IAAhCe,EAAb,EAAOP,KAAcc,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAKtB,IACL,sBAAKkB,UAAU,YAAf,UACKI,GACG,oBAAIJ,UAAU,mCAAd,wBAEHH,EAAOL,KAAI,SAACC,GACT,OACI,cAAC,EAAD,eAEQA,GADCA,EAAKE,cEYvBe,EAzBM,WACjB,MAAoC1C,mBAAS,CAAC,YAAa,mBAA3D,mBAAO2C,EAAP,KAAmB7C,EAAnB,KACA,OACI,qCACI,sBAAKkC,UAAU,SAAf,UACI,gDACA,cAAC,EAAD,CACIjC,YAAY,mBACZD,cAAeA,OAGvB,6BACK6C,EAAWnB,KAAI,SAACV,EAAUY,GACvB,OACI,cAAC,EAAD,CAEIZ,SAAUA,GADLA,Y,MCdjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bf135e1d.chunk.js","sourcesContent":["/**\r\n * @author: alexandercd\r\n * @date: 22/septiembre/2021\r\n * @description: \r\n**/\r\nimport React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories, placeholder }) => {  \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                placeholder={placeholder}\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;","/**\r\n * @author: alexandercd\r\n * @date: 22/septiembre/2021\r\n * @description: \r\n**/\r\n\r\nexport const getGifs = async (category, limit = 10) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=1ME1Xmhdxls4VbBA604N93Nl77WzLTYT`\r\n    const response = await fetch( url );\r\n    const { data } = await response.json();\r\n    const newData = data.map((item, index) => {\r\n        return {\r\n            id: item.id,\r\n            title: item.title,\r\n            url: item.images?.downsized_medium.url\r\n        };\r\n    });   \r\n    return newData; \r\n}\r\n","/**\r\n * @author: alexandercd\r\n * @date: 22/septiembre/2021\r\n * @description: \r\n**/\r\nimport React from 'react';  \r\n\r\nconst GifGridItem = ({ title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\"> \r\n            <div className=\"image\">\r\n                <img \r\n                    alt={title}\r\n                    title={title}\r\n                    src={url}\r\n                />\r\n            </div>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default GifGridItem;","/**\r\n * @author: alexandercd\r\n * @date: 22/septiembre/2021\r\n * @description: \r\n**/\r\nimport React from 'react'; \r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem'\r\nconst GifGrid = ({ category, limit = 15}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category); \r\n \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <div className=\"container\"> \r\n                {loading && (\r\n                    <h3 className=\"animate__animated animate__flash\">Loading...</h3>\r\n                )}\r\n                {images.map((item) => {\r\n                    return (\r\n                        <GifGridItem \r\n                            key={item.id} \r\n                            {...item }\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default GifGrid;","/**\r\n * @author: alexandercd\r\n * @date: 22/septiembre/2021\r\n * @description: \r\n**/\r\nimport { useState, useEffect } from 'react';\r\nimport{getGifs} from '../helpers/getGifs'; \r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category, 10)\r\n            .then( data => {\r\n                setstate({\r\n                    data,\r\n                    loading: false\r\n                })\r\n            });\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n\r\n","/**\r\n * @author: alexandercd\r\n * @date: 22/septiembre/2021\r\n * @description: \r\n**/\r\nimport React, {useState} from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch', 'Rick And morty']); \r\n    return (\r\n        <>\r\n            <div className=\"center\">\r\n                <h2>Gif Expert App</h2>\r\n                <AddCategory \r\n                    placeholder=\"Ingrese un texto\"\r\n                    setCategories={setCategories}\r\n                />\r\n            </div> \r\n            <ol>\r\n                {categories.map((category, index) => {\r\n                    return (\r\n                        <GifGrid \r\n                            key={category} \r\n                            category={category} \r\n                        />\r\n                    )\r\n                })}\r\n            </ol>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default GifExpertApp;","/**\n * @author: alexandercd\n * @date: 22/septiembre/2021\n * @description: \n**/\nimport React from 'react';\nimport ReactDOM from 'react-dom'; \nimport GifExpertApp from './components/GifExpertApp';\nimport './assets/style/index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}